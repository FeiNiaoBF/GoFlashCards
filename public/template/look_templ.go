// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package view

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/FeiNiaoBF/GoFlashCards/cmd/model"
	_ "strconv"
)

func LookHandler(cards []model.CardOutput, tags []model.TagOutput) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"row\"><div class=\"col-xs-12 text-center\"><div class=\"btn-group btn-group-lg\" role=\"group\" aria-label=\"card type\"></div></div></div><hr><div class=\"row memorizePanel\"><div class=\"col-xs-2\"><div class=\"alignContainer\"><div class=\"alignMiddle text-right\"><br><br><a href=\"wewetw\"><i class=\"fa fa-chevron-left fa-5x\"></i></a></div></div></div><div class=\"col-xs-8 col-xs-offset-2\"><div class=\"panel panel-default cardFront\"><div class=\"panel-body\"><div class=\"alignContainer\"><div class=\"alignMiddle frontText\"><h3 class=\"text-center\">Test</h3></div></div></div></div><div class=\"panel panel-primary cardBack\"><div class=\"panel-body\"><div class=\"alignContainer\"><div class=\"alignMiddle frontText\"></div></div></div></div></div></div><div class=\"row\"><div class=\"col-xs-12 text-center\"><a href=\"javascript:\" class=\"btn btn-primary btn-lg flipCard\"><i class=\"fa fa-exchange\"></i> Flip Card</a> &nbsp; &nbsp; <a href=\"\" class=\"btn btn-success btn-lg\"><i class=\"fa fa-check\"></i> I Know It</a> &nbsp; &nbsp; <a href=\"\" class=\"btn btn-primary btn-lg\">Next Card <i class=\"fa fa-arrow-right\"></i></a></div></div><div class=\"row\"><div class=\"col-xs-12 text-center\"><br><br><br><a href=\"\" class=\"btn btn-default btn-sm\"><i class=\"fa fa-bookmark\"></i> bookmark this card (Test)</a></div></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = Base().Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}

// {% for tag in tags %}
//
// {% endfor %}

// templ forTag(tags []model.TagOutput){
// <a href="{{ url_for('memorize', card_type=tag.id) }}" class="btn btn-{{ "primary" if card_type == tag.id else "default" }}">{{tag.tagName}}</a>
// }
