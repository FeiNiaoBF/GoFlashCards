package view

import (
	"github.com/FeiNiaoBF/GoFlashCards/cmd/model"
	"strconv"
	"fmt"
	"strconv"
)

templ LookHandler(cards []model.CardOutput, tags []model.TagOutput) {
	@Base() {
		<div class="row">
			<div class="col-xs-12 text-center">
				<div class="btn-group btn-group-lg" role="group" aria-label="card type">
					@forTag(tags)
				</div>
			</div>
		</div>
		<hr/>
		// Add content
		{ children... }
	}
}

templ LookAllCardHandler(cards []model.CardOutput, tags []model.TagOutput, tagId, cardId int) {
	@LookHandler(cards, tags) {
		<div class="row memorizePanel">
			@nowCard(cards[cardId])
		</div>
		<div class="row">
			<div class="col-xs-12 text-center">
				<a href="javascript:" class="btn btn-primary btn-lg flipCard">
					<i class="fa fa-exchange"></i>
					Flip Card
				</a>
				&nbsp;
				&nbsp;
				<button id="knownbtn" class="btn btn-success btn-lg" data-card-id={ ItoS(cardId) }>
					<i class="fa fa-check"></i>
					I Know It
				</button>
				&nbsp;
				&nbsp;
				<a href={ templ.URL(nextCard(tagId, cardId, cards)) } class="btn btn-primary btn-lg">
					Next Card
					<i class="fa fa-arrow-right"></i>
				</a>
			</div>
		</div>
		<div class="row">
			<div class="col-xs-12 text-center">
				<br/>
				<br/>
				<br/>
				<a href="#" class="btn btn-default btn-sm">
					<i class="fa fa-bookmark"></i>
					now this card id is { strconv.Itoa(cardId) }
				</a>
			</div>
		</div>
	}
}

templ nowCard(card model.CardOutput) {
	<div class="col-xs-8 col-xs-offset-2">
		<div class="panel panel-default cardFront">
			<div class="panel-body">
				<div class="alignContainer">
					<div class="alignMiddle frontText">
						<h3 class="text-center">{ card.Front }</h3>
					</div>
				</div>
			</div>
		</div>
		<div class="panel panel-primary cardBack">
			<div class="panel-body">
				<div class="alignContainer">
					<div class="alignMiddle frontText">
						<div class="text-center largerText">
							{ card.Back }
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
}

templ forTag(tags []model.TagOutput) {
	for index, tag := range tags {
		<a href={ templ.URL(tagCards(index)) } class="btn btn-default">{ tag.Name }</a>
	}
}

func tagCards(tagid int) string {
	return fmt.Sprintf("/look/tag/%d/0", tagid)
}

func nextCard(tagid, cardid int, cards []model.CardOutput) string {
	return fmt.Sprintf("/look/tag/%d/%d", tagid, next(cards, cardid))
}

func knowCard(cardid int) string {
	return fmt.Sprintf("/card/know/%d", cardid)
}

func tagLen(tags []model.TagOutput) int {
	return len(tags)
}

func cardLen(cards []model.CardOutput) int {
	return len(cards)
}

func next(cards []model.CardOutput, oldId int) int {
	if oldId > 0 || oldId < cardLen(cards)-1 {
		return oldId + 1
	}
	return 1
}
